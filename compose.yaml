services:
  postgres:
    image: postgres:14.5-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./data:/var/lib/postgresql/data
    restart: on-failure

  backend:
    # aqui ele constroi a imagem considerando o dockerfile
    build: .
    command: sh -c "python manage.py migrate && python manage.py runserver"
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/store_backend
    restart: on-failure

  frontend:
    build:
      context: store_frontend
      target: development
    ports:
      - 8080:8080
    depends_on:
      backend:
        condition: service_started
    volumes:
      - /store_frontend
      - /store_frontend/node_modules
    restart: on-failure
